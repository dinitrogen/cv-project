{"version":3,"sources":["components/General.js","components/Education.js","components/Experience.js","components/CVform.js","App.js","reportWebVitals.js","index.js"],"names":["General","props","state","name","address","phone","isSubmitted","handleChange","bind","handleSubmit","handleEditClicked","event","target","value","this","setState","preventDefault","onSubmit","type","onChange","onClick","Component","Education","console","log","handleDelete","id","Experience","CVform","schoolForms","experienceForms","schoolForm","experienceForm","addSchoolForm","addExperienceForm","prevID","concat","newSchoolForms","filter","newExperienceForms","className","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df5ec952.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass General extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            address: '',\n            phone: '',\n            isSubmitted: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleEditClicked = this.handleEditClicked.bind(this);\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        \n        this.setState({\n            \n            isSubmitted: true\n        });\n    }\n\n    handleEditClicked() {\n        this.setState({\n            isSubmitted: false\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                Personal info:<br/>\n                {!this.state.isSubmitted &&\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Name:\n                        <input\n                            name=\"name\"\n                            type=\"text\"\n                            value={this.state.name}\n                            onChange={this.handleChange} />\n                    </label>\n                    <br />\n                    <label>\n                        Address:\n                        <input\n                            name=\"address\"\n                            type=\"text\"\n                            value={this.state.address}\n                            onChange={this.handleChange} />\n                    </label>\n                    <br />\n                    <label>\n                        Phone:\n                        <input\n                            name=\"phone\"\n                            type=\"text\"\n                            value={this.state.phone}\n                            onChange={this.handleChange} />\n                    </label>\n                    <br />\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>}\n\n                {this.state.isSubmitted && \n                    <div>Name: {this.state.name}<br/>\n                    Address: {this.state.address}<br/>\n                    Phone: {this.state.phone}<br/>\n                    <button onClick={this.handleEditClicked}>Edit</button>\n                    </div>}\n            </div>\n        );\n    }\n\n}\n\nexport default General;","import React, { Component } from 'react';\n\nclass Education extends Component {\n    constructor(props) {\n        super(props);\n        console.log(props);\n        this.state = {\n            name: '',\n            address: '',\n            isSubmitted: false,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleEditClicked = this.handleEditClicked.bind(this);\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        \n        this.setState({\n            \n            isSubmitted: true\n        });\n    }\n\n    handleEditClicked() {\n        this.setState({\n            isSubmitted: false\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                School Info:<br/>\n                {!this.state.isSubmitted &&\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Name:\n                        <input\n                            name=\"name\"\n                            type=\"text\"\n                            value={this.state.name}\n                            onChange={this.handleChange} />\n                    </label>\n                    <br />\n                    <label>\n                        Address:\n                        <input\n                            name=\"address\"\n                            type=\"text\"\n                            value={this.state.address}\n                            onChange={this.handleChange} />\n                    </label>\n                    <br />\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>}\n\n                {this.state.isSubmitted && \n                    <div>Name: {this.state.name}<br/>\n                    Address: {this.state.address}<br/>\n                    <button onClick={this.handleEditClicked}>Edit</button>\n                    <button onClick={() => this.props.handleDelete(this.props.type, this.props.id)}>Delete</button>\n                    </div>}\n            </div>\n        );\n    }\n\n}\n\nexport default Education;","import React, { Component } from 'react';\n\nclass Experience extends Component {\n    constructor(props) {\n        super(props);\n        console.log(props);\n        this.state = {\n            name: '',\n            address: '',\n            isSubmitted: false,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleEditClicked = this.handleEditClicked.bind(this);\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        \n        this.setState({\n            \n            isSubmitted: true\n        });\n    }\n\n    handleEditClicked() {\n        this.setState({\n            isSubmitted: false\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                Employer Info:<br/>\n                {!this.state.isSubmitted &&\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Name:\n                        <input\n                            name=\"name\"\n                            type=\"text\"\n                            value={this.state.name}\n                            onChange={this.handleChange} />\n                    </label>\n                    <br />\n                    <label>\n                        Address:\n                        <input\n                            name=\"address\"\n                            type=\"text\"\n                            value={this.state.address}\n                            onChange={this.handleChange} />\n                    </label>\n                    <br />\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>}\n\n                {this.state.isSubmitted && \n                    <div>Name: {this.state.name}<br/>\n                    Address: {this.state.address}<br/>\n                    <button onClick={this.handleEditClicked}>Edit</button>\n                    <button onClick={() => this.props.handleDelete(this.props.type, this.props.id)}>Delete</button>\n                    </div>}\n            </div>\n        );\n    }\n\n}\n\nexport default Experience;","import React, { Component } from 'react';\nimport General from './General.js';\nimport Education2 from './Education.js';\nimport Experience from './Experience.js';\n\nclass CVform extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            schoolForms: [],\n            experienceForms: [],\n            schoolForm: {\n                id: 1\n            },\n            experienceForm: {\n                id: 1\n            }\n        }\n    this.addSchoolForm = this.addSchoolForm.bind(this);\n    this.addExperienceForm = this.addExperienceForm.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    addSchoolForm(event) {\n        const schoolForms = this.state.schoolForms;\n        let prevID = this.state.schoolForm.id;\n        prevID++;\n        this.setState({\n            schoolForms: schoolForms.concat(<Education2 \n                                            type=\"education\"\n                                            key={this.state.schoolForm.id} // key is required and may be a \"reserved\" keyword for React\n                                            id={this.state.schoolForm.id}\n                                            handleDelete={this.handleDelete}\n                                             />),\n            schoolForm: {\n                id: prevID\n            }\n        });\n    }\n\n    addExperienceForm(event) {\n        const experienceForms = this.state.experienceForms;\n        let prevID = this.state.experienceForm.id;\n        prevID++;\n        this.setState({\n            experienceForms: experienceForms.concat(<Experience \n                                            type=\"experience\"\n                                            key={this.state.experienceForm.id} // key is required and may be a \"reserved\" keyword for React\n                                            id={this.state.experienceForm.id}\n                                            handleDelete={this.handleDelete}\n                                             />),\n            experienceForm: {\n                id: prevID\n            }\n        });\n    }\n\n    handleDelete(type, id) {\n        // alert('Deleted' + id + type);\n        if (type === 'education') {\n            // console.log(this.state.schoolForms);\n            let newSchoolForms = this.state.schoolForms.filter((schoolForm) => {\n                // console.log(id, schoolForm.key);\n                return schoolForm.props.id !== id;\n            });\n\n            this.setState({\n                schoolForms: newSchoolForms\n            });\n        } else {\n            // console.log(this.state.experienceForms);\n            let newExperienceForms = this.state.experienceForms.filter((experienceForm) => {\n                return experienceForm.props.id !== id;\n            });\n\n            this.setState({\n                experienceForms: newExperienceForms\n            });\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                \n                <General />\n                <br />\n                <button onClick={this.addSchoolForm}>Add School</button>\n                \n                <div className=\"schoolsDiv\">\n                    {this.state.schoolForms.map((schoolForm) => {\n                            return schoolForm;\n                        })}\n                </div>\n                <br />\n                <button onClick={this.addExperienceForm}>Add Experience</button>\n                \n                <div className=\"experienceDiv\">\n                    {this.state.experienceForms.map((experienceForm) => {\n                        return experienceForm;\n                    })}\n                </div>\n                        \n            </div>\n        );\n    }\n\n}\n\nexport default CVform;","import './App.css';\nimport CVform from './components/CVform.js';\n\nfunction App() {\n  \n  \n   \n    return (\n      <div className=\"App\">\n          \n          <CVform />\n      </div>\n    );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}